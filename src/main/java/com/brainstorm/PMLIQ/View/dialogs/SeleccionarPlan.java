/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.brainstorm.PMLIQ.View.dialogs;

import com.brainstorm.PMLIQ.Control.PDF.PDFOrden;
import com.brainstorm.PMLIQ.Control.PDF.PDFPlanes;
import com.brainstorm.PMLIQ.Model.EquipoInfo.PlanMantenimiento;
import com.brainstorm.PMLIQ.View.PMLIApp;
import com.brainstorm.PMLIQ.View.panel.list.EquiposListaPanel;
import java.awt.Desktop;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;

/**
 *
 * @author Silex RPR
 */
public class SeleccionarPlan extends java.awt.Dialog {

    /**
     * Creates new form SeleccionarPlan
     */
    public SeleccionarPlan(java.awt.Frame parent, boolean modal, List<PlanMantenimiento> planes) {
        super(parent, modal);
        initComponents();
        
        setTitle("Seleccionando el plan de mantenimiento");
        setResizable(false);
        
        this.planes = planes;
        this.planesList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        
        for(PlanMantenimiento p : planes) {
            planesModel.addElement(p.getNombre());
        }
        
        planesList.setModel(planesModel);       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        planesList = new javax.swing.JList();
        generarButton = new javax.swing.JButton();
        cancelarButton = new javax.swing.JButton();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        jLabel1.setText("SELECCIONAR PLAN DE MANTENIMIENTO");

        jScrollPane1.setViewportView(planesList);

        generarButton.setText("Generar");
        generarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generarButtonActionPerformed(evt);
            }
        });

        cancelarButton.setText("Cancelar");
        cancelarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(generarButton)
                        .addGap(37, 37, 37)
                        .addComponent(cancelarButton)
                        .addGap(29, 29, 29)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(35, 35, 35))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(generarButton)
                    .addComponent(cancelarButton))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Closes the dialog
     */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog

    private void generarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generarButtonActionPerformed
       int selected = planesList.getSelectedIndex();
       PlanMantenimiento plan = planes.get(selected);
       
       String rutaArchivo = "Data/Ordenes/Orden - " + plan.getCodigo() + ".pdf";
            
       PMLIApp.getInstance().getAdmEquipos().crearPDF(new PDFOrden(), plan, rutaArchivo);

       if (Desktop.isDesktopSupported()) {
           
           setVisible(false);
           dispose();
           if ( JOptionPane.showConfirmDialog(PMLIApp.getInstance().getMainWindow(), "     La orden de mantenimiento del equipo se genero correctamente.\n"
                       + "Â¿Desea abrir la orden de mantenimiento generada en su lector de PDF?" , "Lectura Ordenes de Mantenimiento",JOptionPane.YES_NO_OPTION) == JOptionPane.OK_OPTION)
               {
                   File archivoPDF = new File(rutaArchivo);
                   try {
                       Desktop.getDesktop().open(archivoPDF);
                   } catch (IOException ex) {
                       Logger.getLogger(EquiposListaPanel.class.getName()).log(Level.SEVERE, null, ex);
                   }
               }
           else
           {
              JOptionPane.showMessageDialog(PMLIApp.getInstance().getMainWindow(), "La orden de mantenimiento se genero correctamente y se encuentra en PDF\n"
                        + "           en la carpeta del programa.", "Error Lector PDF", JOptionPane.INFORMATION_MESSAGE);
           }
        } 
    
    }//GEN-LAST:event_generarButtonActionPerformed

    private void cancelarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarButtonActionPerformed
        setVisible(false);
        dispose();
    }//GEN-LAST:event_cancelarButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SeleccionarPlan dialog = new SeleccionarPlan(new java.awt.Frame(), true, new ArrayList<PlanMantenimiento>());
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    private DefaultListModel planesModel = new DefaultListModel();
   
    private List<PlanMantenimiento> planes = new ArrayList<PlanMantenimiento>();
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelarButton;
    private javax.swing.JButton generarButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList planesList;
    // End of variables declaration//GEN-END:variables
}
